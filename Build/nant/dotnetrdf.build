<?xml version="1.0"?>
<project name="dotNetRDF Core Library" default="build-nightly" basedir="../../">
  <description>Generates the dotNetRDF Core Library Builds</description>

  <!-- Load in the <ftp> task dll -->
  <loadtasks assembly="Build/nant/ftptask.dll" />
  
  <!-- Disable Building and Compiling Options -->
  <property name="dotnetrdf.nobuild" value="" />
  <property name="dotnetrdf.nosign" value="" />
  <property name="dotnetrdf.nocompile" value="" />
  <property name="dotnetrdf.nosilverlight" value="" />
  <property name="dotnetrdf.nowindowsphone" value="${dotnetrdf.nosilverlight}" />

  <!-- Set the Compiler Warnings we want to ignore -->
  <property name="dotnetrdf.nowarn" value="1591;0067" />
  
  <!-- Licensing Properties -->
  <property name="dotnetrdf.license.exclude.exts" 
            value="dll,pdb,xml,xaml,ttl,txt,csproj,user,xsd,exe,cache,dtd,template,pfx,sql,resources,resx,xshd,config,properties,settings,rdf,out,rq,trig,trix,ru,nt,n3,nq,srx,owl,srj,html,json,xhtml,css,js,sparql,xslt,bak,csv,tsv,ico,png,jpg,tiff,bmp,orig" />
  <property name="dotnetrdf.license.exclude.regex" value="hg|svn|obj|bin" />
  <property name="dotnetrdf.license.search" value="Copyright dotNetRDF Project" />
  <property name="dotnetrdf.license.replace" value="license-boilerplate.txt" />
  <property name="dotnetrdf.license.overwrite" value="-overwrite" /> <!-- Alternative is -preserve which does not change existing licenses -->
  
  <!-- Signing Properties -->
  <property name="dotnetrdf.keyfile" value="../../Build/dotNetRDF.snk" />

  <!-- Version Properties -->
  <!-- When generating ZIP files with the dist targets use the command line -d option to set these appropriately -->
  <property name="dotnetrdf.version" value="072" />
  <property name="dotnetrdf.releasetype" value="beta" />
  <property name="dotnetrdf.toolsversion" value="062" />
  <property name="dotnetrdf.toolsreleasetype" value="beta" />
  <property name="dotnetrdf.nuspecversion" value="0.7.2" />

  <!-- Note that FTP credentials are not included in the file for obvious reasons -->
  <!-- If you want to use the upload targets then use the command line -d option to set these appropriately -->
  <property name="dotnetrdf.webserver" value="" />
  <property name="dotnetrdf.webserver.username" value="" />
  <property name="dotnetrdf.webserver.password" value="" />
  <connection id="dotNetRDFWebsite" server="${dotnetrdf.webserver}" username="${dotnetrdf.webserver.username}" password="${dotnetrdf.webserver.password}" />
  
  <!-- Names of ZIP Files generated by dist targets -->
  <property name="dotnetrdf.nightlyzip" value="dotNetRDF_library_nightly.zip" />
  <property name="dotnetrdf.libzip" value="dotNetRDF_library_${dotnetrdf.version}_${dotnetrdf.releasetype}.zip" />
  <property name="dotnetrdf.srczip" value="dotNetRDF_library_source_${dotnetrdf.version}_${dotnetrdf.releasetype}.zip" />
  <property name="dotnetrdf.toolkitzip" value="dotNetRDF_tools_${dotnetrdf.toolsversion}_${dotnetrdf.toolsreleasetype}.zip" />
  <property name="dotnetrdf.toolkitinstaller" value="dotNetRDF_tools_${dotnetrdf.toolsversion}_${dotnetrdf.toolsreleasetype}_installer.zip" />
  
  <!-- Project Generation Targets which generate some Project Files from others -->

  <target name="projectgen-core-net35" description="Generates the dotNetRDF .Net 3.5 build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Core .Net 3.5 project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.net35/dotNetRDF.Net35.csproj.template" />
      <arg value="Libraries/core.net35/dotNetRDF.Net35.csproj" />
    </exec>
  </target>

  <target name="projectgen-core-silverlight" description="Generates the dotNetRDF Silverlight build project file" depends="compile-buildtools" unless="${dotnetrdf.nosilverlight == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Silverlight project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj.template" />
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
    </exec>    
  </target>

  <target name="projectgen-core-windowsphone" description="Generates the dotNetRDF Windows Phone build project file" depends="projectgen-core-silverlight" unless="${dotnetrdf.nowindowsphone == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Windows Phone project file with the Core Library -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.template" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.temp" />
    </exec>
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj.temp" />
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj" />
      <arg value="..\core.silverlight\" />
    </exec>
  </target>

  <target name="projectgen-core-clientprofile" description="Generates the dotNetRDF Client Profile build project file" depends="projectgen-core-silverlight" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Client Profile project file with the Core Library and Silverlight (for the System.Web compatability stuff) -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.template" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.temp" />
    </exec>
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj.temp" />
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj" />
      <arg value="..\core.silverlight\" />
    </exec>
  </target>

  <target name="projectgen-core-clientprofile-net35" description="Generates the dotNetRDF Client Profile .Net 3.5 build project file" depends="projectgen-core-net35,projectgen-core-clientprofile" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Client Profile project file with the Core Library and Silverlight (for the System.Web compatability stuff) -->    
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg value="Libraries/core.clientprofile.net35/dotNetRDF.ClientProfile.Net35.csproj.template" />
      <arg value="Libraries/core.clientprofile.net35/dotNetRDF.ClientProfile.Net35.csproj.temp" />
    </exec>
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg value="Libraries/core.clientprofile.net35/dotNetRDF.ClientProfile.Net35.csproj.temp" />
      <arg value="Libraries/core.clientprofile.net35/dotNetRDF.ClientProfile.Net35.csproj" />
      <arg value="..\core.silverlight\" />
    </exec>
  </target>

  <target name="projectgen-query-fulltext-clientprofile" description="Generates the dotNetRDF Query.FullText .Net 4.0 Client Profile build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Query.FullText .Net 4.0 Client Profile project file with the Query.FullText project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/query.fulltext/dotNetRDF.Query.FullText.csproj" />
      <arg value="Libraries/query.fulltext.clientprofile/dotNetRDF.Query.FullText.ClientProfile.csproj.template" />
      <arg value="Libraries/query.fulltext.clientprofile/dotNetRDF.Query.FullText.ClientProfile.csproj" />
      <arg value="..\query.fulltext\" />
    </exec>
  </target>

  <target name="projectgen-query-fulltext-net35" description="Generates the dotNetRDF Query.FullText .Net 3.5 build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Query.FullText .Net 3.5 project file with the Query.FullText project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/query.fulltext/dotNetRDF.Query.FullText.csproj" />
      <arg value="Libraries/query.fulltext.net35/dotNetRDF.Query.FullText.Net35.csproj.template" />
      <arg value="Libraries/query.fulltext.net35/dotNetRDF.Query.FullText.Net35.csproj" />
      <arg value="..\query.fulltext\" />
    </exec>
  </target>

  <target name="projectgen-query-fulltext-clientprofile-net35" description="Generates the dotNetRDF Query.FullText .Net 3.5 Client Profile build project file" depends="compile-buildtools"  unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Query.FullText .Net 3.5 Client Profile project file with the Query.FullText project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/query.fulltext/dotNetRDF.Query.FullText.csproj" />
      <arg value="Libraries/query.fulltext.clientprofile.net35/dotNetRDF.Query.FullText.ClientProfile.Net35.csproj.template" />
      <arg value="Libraries/query.fulltext.clientprofile.net35/dotNetRDF.Query.FullText.ClientProfile.Net35.csproj" />
      <arg value="..\query.fulltext\" />
    </exec>
  </target>

  <target name="projectgen-data-virtuoso-clientprofile" description="Generates the dotNetRDF Data.Virtuoso .Net 4.0 Client Profile build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Data.Virtuoso .Net 4.0 Client Profile project file with the Data.Virtuoso project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/data.virtuoso/dotNetRDF.Data.Virtuoso.csproj" />
      <arg value="Libraries/data.virtuoso.clientprofile/dotNetRDF.Data.Virtuoso.ClientProfile.csproj.template" />
      <arg value="Libraries/data.virtuoso.clientprofile/dotNetRDF.Data.Virtuoso.ClientProfile.csproj" />
      <arg value="..\data.virtuoso\" />
    </exec>
  </target>

  <target name="projectgen-data-virtuoso-net35" description="Generates the dotNetRDF Data.Virtuoso .Net 3.5 build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Data.Virtuoso .Net 3.5 project file with the Data.Virtuoso project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/data.virtuoso/dotNetRDF.Data.Virtuoso.csproj" />
      <arg value="Libraries/data.virtuoso.net35/dotNetRDF.Data.Virtuoso.Net35.csproj.template" />
      <arg value="Libraries/data.virtuoso.net35/dotNetRDF.Data.Virtuoso.Net35.csproj" />
      <arg value="..\data.virtuoso\" />
    </exec>
  </target>

  <target name="projectgen-data-virtuoso-clientprofile-net35" description="Generates the dotNetRDF Data.Virtuoso .Net 3.5 Client Profile build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Data.Virtuoso .Net 3.5 Client Profile project file with the Data.Virtuoso project file -->
    <exec program="Build/ExportCoreContentsToTemplate/bin/Debug/ExportCoreContentsToTemplate.exe">
      <arg value="Libraries/data.virtuoso/dotNetRDF.Data.Virtuoso.csproj" />
      <arg value="Libraries/data.virtuoso.clientprofile.net35/dotNetRDF.Data.Virtuoso.ClientProfile.Net35.csproj.template" />
      <arg value="Libraries/data.virtuoso.clientprofile.net35/dotNetRDF.Data.Virtuoso.ClientProfile.Net35.csproj" />
      <arg value="..\data.virtuoso\" />
    </exec>
  </target>
  
  <!-- License Targets which enforce license headers on the code -->

  <target name="license" description="Applies license headers to all targets"
          depends="license-libs,license-tests,license-utils" unless="${dotnetrdf.nocompile}" />

  <target name="license-libs" description="Applies license headers to all library targets"
          depends="license-core,license-core-silverlight,
                   license-data-virtuoso,
                   license-query-fulltext,
                   license-editor-core,license-editor-wpf,
                   license-storemanager-core,
                   license-httpserver" unless="${dotnetrdf.nocompile}" />

  <target name="license-tests" description="Applies license headers to all test targets"
          depends="license-libs,
                   license-tests-informal,license-unit-tests,license-dawg-tests" unless="${dotnetrdf.nocompile}" />

  <target name="license-utils" description="Applies license headers to all utility targets"
          depends="license-libs,
                   license-util-convert,
                   license-util-editor-wpf,
                   license-util-opt-stats,
                   license-util-query-cmd,license-util-query-gui,
                   license-util-server-cmd,license-util-server-gui,
                   license-util-webdeploy,
                   license-util-storemanager" unless="${dotnetrdf.nocompile}" />

  <target name="license-core" description="Applies license headers to the Core Library" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/core/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-core-silverlight" description="Applies license headers to the Core Library Silverlight build" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/core.silverlight/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-data-virtuoso" description="Applies license headers to the Data.Virtuoso library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/data.virtuoso/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-query-fulltext" description="Applies license headers to the Query.FullText library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/query.fulltext/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-gui-winforms" description="Applies license headers to the dotNetRDF.WinForms library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/gui.winforms/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-editor-core" description="Applies license headers to the rdfEditor.Core library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/editor/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-editor-wpf" description="Applies license headers to the rdfEditor.Core.Wpf library" depends="license-editor-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/editor.wpf/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-storemanager-core" description="Applies license headers to the StoreManager.Core library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/storemanager.core/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-httpserver" description="Applies license headers to the VDS.Web.Server library" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Libraries/httpserver/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-tests-informal" description="Applies license headers to the Tests project" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Testing/testsuite/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-unit-tests" description="Applies license headers to the Unit Tests library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Testing/unittest/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-dawg-tests" description="Applies license headers to the DAWG Tests project" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Testing/sparqlDawgTests/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-convert" description="Applies license headers to the rdfConvert utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfConvert/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-editor-wpf" description="Applies license headers to the rdfEditor.Wpf utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfEditor.Wpf/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-opt-stats" description="Applies license headers to the rdfOptStats utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfOptStats/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-query-cmd" description="Applies license headers to the rdfQuery utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfQuery/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-query-gui" description="Applies license headers to the SparqlGUI utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/SparqlGUI/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-server-cmd" description="Applies license headers to the rdfServer utility" depends="license-core,license-httpserver" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfServer/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-server-gui" description="Applies license headers to the rdfServer utility" depends="license-util-server-cmd" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfServerGUI/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-webdeploy" description="Applies license headers to the rdfWebDeploy utility" depends="license-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/rdfWebDeploy/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <target name="license-util-storemanager" description="Applies license headers to the StoreManager utility" depends="license-core,license-storemanager-core" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="Utilities/StoreManager/" />
      <arg value="-exclude-exts" />
      <arg value="${dotnetrdf.license.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${dotnetrdf.license.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${dotnetrdf.license.search}" />
      <arg value="-license-file" />
      <arg value="${dotnetrdf.license.replace}" />
      <arg value="-fix" />
      <arg value="${dotnetrdf.license.overwrite}" />
    </exec>
  </target>

  <!-- Compile Targets which Compile the Code -->

  <target name="no-compile" description="Sets that no compilation should be done">
    <property name="dotnetrdf.nocompile" value="true" />
  </target>

  <target name="compile" description="Compile the dotNetRDF Solution and all platform specific builds" unless="${dotnetrdf.nocompile}" 
          depends="compile-libs-main,
                   compile-libs-utils,
                   compile-utils">

  </target>

  <target name="compile-libs-main" description="Compiles all the libraries that make up the main distribution" unless="${dotnetrdf.nocompile}"
          depends="compile-core,compile-core-net35,
                   compile-core-silverlight,
                   compile-core-windowsphone,
                   compile-core-clientprofile,compile-core-clientprofile-net35,
                   compile-data-virtuoso,compile-data-virtuoso-net35,compile-data-virtuoso-clientprofile,compile-data-virtuoso-clientprofile-net35,
                   compile-query-fulltext,compile-query-fulltext-net35,compile-query-fulltext-clientprofile,compile-query-fulltext-clientprofile-net35">
  </target>

  <target name="compile-libs-utils" description="Compiles all the additional libraries needed for the Toolkit distribution" unless="${dotnetrdf.nocompile}"
          depends="compile-editor-core,compile-editor-wpf,
                   compile-storemanager-core,
                   compile-httpserver">
  </target>

  <target name="compile-utils" description="Compiles the dotNetRDF Toolkit" unless="${dotnetrdf.nocompile}"
        depends="license-utils,
                   compile-util-convert,
                   compile-util-editor-wpf,
                   compile-util-opt-stats,
                   compile-util-query-cmd,license-util-query-gui,
                   compile-util-server-cmd,license-util-server-gui,
                   compile-util-webdeploy,
                   compile-util-storemanager">

  </target>
          
  <target name="compile-core" description="Compiles just the dotNetRDF Core Library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/core/dotNetRDF.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-core-net35" description="Compile the dotNetRDF Core .Net 3.5 Build" unless="${dotnetrdf.nocompile}" depends="license-core,projectgen-core-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.net35/dotNetRDF.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-core-silverlight" description="Compile the dotNetRDF Silverlight Build"  unless="${dotnetrdf.nocompile}" depends="license-core-silverlight,projectgen-core-silverlight">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.silverlight/dotNetRDF.Silverlight.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-core-windowsphone" description="Compile the dotNetRDF Windows Phone Build"  unless="${dotnetrdf.nocompile == 'true' or dotnetrdf.nowindowsphone == 'true'}" depends="license-core-silverlight,projectgen-core-windowsphone">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <property name="msBuild.exe" value="${string::replace(msBuild.exe,'Framework64','Framework')}" if="${string::contains(msBuild.exe, 'Framework64')}" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.windowsphone/dotNetRDF.WindowsPhone.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-buildtools" description="Compiles Build Tools needed by the compile and build process" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Build/ExportCoreContentsToTemplate/ExportCoreContentsToTemplate.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Build/LicenseChecker/LicenseChecker.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-core-clientprofile" description="Compiles the dotNetRDF Client Profile Build" unless="${dotnetrdf.nocompile}" depends="license-core,projectgen-core-clientprofile">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.clientprofile/dotNetRDF.ClientProfile.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-core-clientprofile-net35" description="Compiles the dotNetRDF Client Profile .Net 3.5 Build" unless="${dotnetrdf.nocompile}" depends="license-core,compile-core-net35,projectgen-core-clientprofile-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core.clientprofile.net35/dotNetRDF.ClientProfile.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-data-virtuoso" description="Compiles the dotNetRDF Data.Virtuoso Library" unless="${dotnetrdf.nocompile}" depends="license-data-virtuoso,compile-core">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.virtuoso/dotNetRDF.Data.Virtuoso.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-data-virtuoso-clientprofile" description="Compiles the dotNetRDF Data.Virtuoso Client Profile Library" unless="${dotnetrdf.nocompile}" depends="license-data-virtuoso,compile-core-clientprofile,projectgen-data-virtuoso-clientprofile">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.virtuoso.clientprofile/dotNetRDF.Data.Virtuoso.ClientProfile.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-data-virtuoso-net35" description="Compiles the dotNetRDF Data.Virtuoso .Net 3.5 Library" unless="${dotnetrdf.nocompile}" depends="license-data-virtuoso,compile-core-net35,projectgen-data-virtuoso-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.virtuoso.net35/dotNetRDF.Data.Virtuoso.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-data-virtuoso-clientprofile-net35" description="Compiles the dotNetRDF Data.Virtuoso .Net 3.5 Client Profile Library" unless="${dotnetrdf.nocompile}" depends="license-data-virtuoso,compile-core-clientprofile-net35,projectgen-data-virtuoso-clientprofile-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/data.virtuoso.clientprofile.net35/dotNetRDF.Data.Virtuoso.ClientProfile.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-query-fulltext" description="Complies the dotNetRDF Query.FullText Library" unless="${dotnetrdf.nocompile}" depends="license-query-fulltext,compile-core">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/query.fulltext/dotNetRDF.Query.FullText.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-query-fulltext-clientprofile" description="Complies the dotNetRDF Query.FullText .Net 4.0 Client Profile Library" unless="${dotnetrdf.nocompile}" depends="license-query-fulltext,compile-core-clientprofile,projectgen-query-fulltext-clientprofile">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/query.fulltext.clientprofile/dotNetRDF.Query.FullText.ClientProfile.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-query-fulltext-net35" description="Complies the dotNetRDF Query.FullText .Net 3.5 Library" unless="${dotnetrdf.nocompile}" depends="license-query-fulltext,compile-core-net35,projectgen-query-fulltext-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/query.fulltext.net35/dotNetRDF.Query.FullText.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <!--<arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />-->
    </exec>
  </target>

  <target name="compile-query-fulltext-clientprofile-net35" description="Complies the dotNetRDF Query.FullText .Net 3.5 Client Profile Library" unless="${dotnetrdf.nocompile}" depends="license-query-fulltext,compile-core-clientprofile-net35,projectgen-query-fulltext-clientprofile-net35">
    <property name="nant.settings.currentframework" value="net-3.5" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/query.fulltext.clientprofile.net35/dotNetRDF.Query.FullText.ClientProfile.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <!--<arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />-->
    </exec>
  </target>

  <target name="compile-editor-core" description="Compiles just the rdfEditor Core Library" depends="license-editor-core,compile-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/editor/rdfEditor.Core.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-editor-wpf" description="Compiles just the rdfEditor WPF Library" depends="license-editor-wpf,compile-editor-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/editor.wpf/rdfEditor.Core.Wpf.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-storemanager-core" description="Compiles just the StoreManager Core Library" depends="license-storemanager-core,compile-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/storemanager.core/StoreManager.Core.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-httpserver" description="Compiles just the VDS.Web.Server Library" depends="license-httpserver" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/httpserver/VDS.Web.Server.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
    </exec>
  </target>

  <target name="compile-util-convert" description="Compile the rdfConvert Utility" depends="license-utils,compile-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfConvert/rdfConvert.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-editor-wpf" description="Compile the rdfEditor Utility" depends="license-utils,compile-libs-main,compile-libs-utils" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfEditor.Wpf/rdfEditor.Wpf.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-opt-stats" description="Compile the rdfOptStats Utility" depends="license-utils,compile-libs-main" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfOptStats/rdfOptStats.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-query-cmd" description="Compile the rdfQuery Utility" depends="license-utils,compile-libs-main" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfQuery/rdfQuery.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-query-gui" description="Compile the SparqlGui Utility" depends="license-utils,compile-libs-main" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/SparqlGui/SparqlGui.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-server-cmd" description="Compile the rdfServer Utility" depends="license-utils,compile-libs-main,compile-libs-utils" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfServer/rdfServer.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-server-gui" description="Compile the rdfServerGUI Utility" depends="license-utils,compile-libs-main,compile-libs-utils" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfServerGUI/rdfServerGUI.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-webdeploy" description="Compile the rdfWebDeploy Utility" depends="license-utils,compile-libs-main" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/rdfWebDeploy/rdfWebDeploy.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>

  <target name="compile-util-storemanager" description="Compile the StoreManager Utility" depends="license-utils,compile-libs-main,compile-libs-utils" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Utilities/StoreManager/StoreManager.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent="/>
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;"/>
    </exec>
  </target>
    
  <!-- Build Targets which Compile the Code and copy the output to the root bin/ directory of the repository -->

  <target name="no-build" description="Sets that no Builds should be performed" depends="no-compile">
    <property name="dotnetrdf.nobuild" value="true" />
  </target>
  
  <target name="build" description="Build dotNetRDF nightlies" unless="${dotnetrdf.nobuild}" 
          depends="build-libs">
    
  </target>

  <target name="build-libs" description="Builds dotNetRDF library nightlies" unless="${dotnetrdf.nobuild}"
          depends="build-core,build-core-net35,
                   build-core-silverlight,
                   build-core-clientprofile,build-core-clientprofile-net35,
                   build-core-windowsphone,
                   build-data-virtuoso,build-data-virtuoso-net35,build-data-virtuoso-clientprofile,build-data-virtuoso-clientprofile-net35,
                   build-query-fulltext,build-query-fulltext-net35,build-query-fulltext-clientprofile,build-query-fulltext-clientprofile-net35" />
  
  <target name="build-core" description="Copy the latest build to the Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-net35" description="Copy the latest 3.5 build to the Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-silverlight" description="Copy the latest Silverlight build to the Silverlight Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core-silverlight">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-windowsphone" description="Copy the latest Windows Phone build to the Windows Phone Nightly Build directory" unless="${dotnetrdf.nobuild}" if="${dotnetrdf.nowindowsphone != 'true'}"  depends="compile-core-windowsphone">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-clientprofile" description="Copy the latest Client Profile build to the Client Profile Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-core-clientprofile">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-clientprofile-net35" description="Copy the latest Client Profile 3.5 build to the Client Profile Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-core-clientprofile-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-data-virtuoso" description="Copy the latest Data.Virtuoso build to the Data.Virtuoso nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-virtuoso">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/OpenLink.Data.Virtuoso.dll" />
  </target>

  <target name="build-data-virtuoso-clientprofile" description="Copy the latest Data.Virtuoso Client Profile build to the Data.Virtuoso nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-virtuoso-clientprofile">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/OpenLink.Data.Virtuoso.dll" />
  </target>

  <target name="build-data-virtuoso-net35" description="Copy the latest Data.Virtuoso 3.5 build to the Data.Virtuoso nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-virtuoso-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/OpenLink.Data.Virtuoso.dll" />
  </target>

  <target name="build-data-virtuoso-clientprofile-net35" description="Copy the latest Data.Virtuoso 3.5 Client Profile build to the Data.Virtuoso nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-data-virtuoso-clientprofile-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/OpenLink.Data.Virtuoso.dll" />
  </target>

  <target name="build-query-fulltext" description="Copy the latest Query.FullText build to the Query.FullText nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-query-fulltext">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-query-fulltext-clientprofile" description="Copy the latest Query.FullText build to the Query.FullText Client Profile nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-query-fulltext-clientprofile">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-query-fulltext-net35" description="Copy the latest Query.FullText build to the Query.FullText nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-query-fulltext-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-query-fulltext-clientprofile-net35" description="Copy the latest Query.FullText build to the Query.FullText nightly build directory" unless="${dotnetrdf.nobuild}" depends="compile-query-fulltext-clientprofile-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-release" description="Copies the builds to the stable build directory ready for a release" unless="${dotnetrdf.nobuild}"
          depends="build-release-libs,build-release-utils" />

  <target name="build-release-libs" description="Copy the library builds to the Stable Build directory ready for a release" unless="${dotnetrdf.nobuild}" depends="build-libs">
    <!-- Documentation -->
    <copy overwrite="true" todir="bin/stable/Libraries/" file="Acknowledgments.txt" />
    <copy overwrite="true" todir="bin/stable/Libraries/" file="Libraries/core/ChangeLog.txt" />
    <copy overwrite="true" todir="bin/stable/Libraries/" file="Libraries/core/ReleaseNotes.txt" />
    <copy overwrite="true" todir="bin/stable/Libraries/" file="Libraries/core/Readme.txt" />
    <!-- Core 4.0 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40/" file="Libraries/core/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40/" file="Libraries/core/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40/" file="Libraries/core/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40/" file="Libraries/core/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Core 3.5 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35/" file="Libraries/core.net35/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Core 4.0 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net40-client/" file="Libraries/core.clientprofile/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Core 3.5 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/net35-client/" file="Libraries/core.clientprofile.net35/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Core Silverlight 4.0 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4/" file="Libraries/core.silverlight/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Core Silverlight 4.0 Build for Windows Phone 7 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Core/sl4-wp/" file="Libraries/core.windowsphone/bin/Debug/Newtonsoft.Json.dll" />
    <!-- Data.Virtuoso 4.0 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40/" file="Libraries/data.virtuoso/bin/Debug/OpenLink.Data.Virtuoso.dll" />
    <!-- Data.Virtuoso 4.0 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net40-client/" file="Libraries/data.virtuoso.clientprofile/bin/Debug/OpenLink.Data.Virtuoso.dll" />
    <!-- Data.Virtuoso 3.5 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35/" file="Libraries/data.virtuoso.net35/bin/Debug/OpenLink.Data.Virtuoso.dll" />
    <!-- Data.Virtuoso 3.5 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/dotNetRDF.Data.Virtuoso.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/dotNetRDF.Data.Virtuoso.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Data/Virtuoso/net35-client/" file="Libraries/data.virtuoso.clientprofile.net35/bin/Debug/OpenLink.Data.Virtuoso.dll" />
    <!-- Query.FullText 4.0 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40/" file="Libraries/query.fulltext/bin/Debug/Lucene.Net.dll" />
    <!-- Query.FullText 4.0 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net40-client/" file="Libraries/query.fulltext.clientprofile/bin/Debug/Lucene.Net.dll" />
    <!-- Query.FullText 3.5 Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35/" file="Libraries/query.fulltext.net35/bin/Debug/Lucene.Net.dll" />
    <!-- Query.FullText 3.5 Client Profile Build -->
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/dotNetRDF.Query.FullText.dll" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/dotNetRDF.Query.FullText.xml" />
    <copy overwrite="true" todir="bin/stable/Libraries/Query/FullText/net35-client/" file="Libraries/query.fulltext.clientprofile.net35/bin/Debug/Lucene.Net.dll" />
  </target>

  <target name="build-release-utils" description="Copy the toolkit builds to the Stable build directory for a release" unless="${dotnetrdf.nobuild}"
          depends="compile-utils" />
  
  <!-- Clean Targets -->

  <target name="clean" description="Cleans the bin/ and obj/ directories of all projects causing a rebuild to be necessary"
          depends="clean-nightlies,clean-stable,clean-intermediaries">
  </target>

  <target name="clean-nightlies" description="Cleans the nightly build directory">
    <delete failonerror="true">
      <fileset>
        <include name="bin/nightlies/**/*" />
      </fileset>
    </delete>
  </target>

  <target name="clean-stable" description="Cleans the stable build directory">
    <delete failonerror="true">
      <fileset>
        <include name="bin/stable/**/*" />
      </fileset>
    </delete>
  </target>

  <target name="clean-intermediaries" description="Cleans the intermediary bin/ and obj/ directories of all projects">
    <delete failonerror="false">
      <fileset>
        <include name="**/bin/**/*" />
        <include name="**/obj/**/*" />
      </fileset>
    </delete>
  </target>

  <target name="clean-dist" description="Cleans the distibution zip files">
    <delete failonerror="false">
      <fileset>
        <include name="dotNetRDF*.zip" />
      </fileset>
    </delete>
  </target>

  <target name="clean-ndoc" description="Cleans the NDoc working directory">
    <delete failonerror="false">
      <fileset>
        <include name="Build/ndoc3/docs/*" />
      </fileset>
    </delete>
  </target>
  
  <!-- Dist Targets for creating the distribution ZIP Files -->

  <target name="dist" description="Creates the Distribution ZIP Files" depends="dist-libs,dist-nightly,dist-toolkit,dist-nuget">
    
  </target>

  <target name="dist-libs" description="Creates the ZIP files for the Core Library Release" depends="build-release-libs">
    <zip zipfile="${dotnetrdf.libzip}" ziplevel="9">
      <fileset basedir="bin/stable/Libraries/" failonempty="true">
        <include name="**/*" />
      </fileset>
    </zip>
    <zip zipfile="${dotnetrdf.srczip}" ziplevel="9"> 
      <fileset failonempty="true">
        <include name="**/*" />
        <exclude name=".hg/*" />
        <exclude name="**/bin/**/*" />
        <exclude name="**/obj/**/*" />
	      <exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/*.pdb" />
        <exclude name="Testing/" />
        <exclude name="TestResults/" />
        <exclude name="Samples/" />
	      <exclude name="*.zip" />
	      <exclude name="Utilities/bsbm/" />
	      <exclude name="Build/ndoc3/docs/" />
	      <exclude name="Build/NuGet/*/lib/**/*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nightly" description="Creates the Nightly ZIP files" depends="build">
    <zip zipfile="${dotnetrdf.nightlyzip}" ziplevel="9">
      <fileset basedir="bin/nightlies/Libraries/" failonempty="true">
        <include name="/**/*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-toolkit" description="Creates the Toolkit ZIP files" depends="build">
    <zip zipfile="${dotnetrdf.toolkitzip}" ziplevel="9" duplicate="Preserve">
      <fileset basedir="Utilities">
        <include name="ReadMe.txt" />
        <include name="../Acknowlegments.txt" />
        <include name="ChangeLog.txt" />
      </fileset>
      <fileset basedir="Utilities/rdfConvert/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfEditor.Wpf/bin/Debug">
        <include name="**/*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfQuery/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfServer/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/rdfWebDeploy/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/SparqlGUI/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/storemanager/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
      <fileset basedir="Utilities/soh/bin/Debug">
        <include name="*" />
        <exclude name="*.pdb" />
        <exclude name="*.vshost.*" />
        <exclude name="temp.*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-toolkit-installer" description="Creates the Toolkit Installer ZIP" depends="build">
    <zip zipfile="${dotnetrdf.toolkitinstaller}" ziplevel="9">
      <fileset basedir="Build/ToolkitInstaller/Debug/" failonempty="true">
        <include name="*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nuget" description="Creates the NuGet packages" depends="dist-nuget-core,dist-nuget-data-virtuoso,dist-nuget-query-fulltext">
  </target>

  <target name="dist-nuget-core" description="Creates the Core Library NuGet package" depends="build-release-libs">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net40/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net40-client/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35-client/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4-wp">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Core library package -->
    <copy todir="Build/nuget/Core/lib/net40/">
      <fileset basedir="bin/stable/Libraries/Core/net40/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net40-client/">
      <fileset basedir="bin/stable/Libraries/Core/net40-client/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net35/">
      <fileset basedir="bin/stable/Libraries/Core/net35/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net35-client/">
      <fileset basedir="bin/stable/Libraries/Core/net35-client/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4/">
      <fileset basedir="bin/stable/Libraries/Core/sl4/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4-wp/">
      <fileset basedir="bin/stable/Libraries/Core/sl4-wp/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <!-- Finally invoke nuget on the package -->
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <target name="dist-nuget-data-virtuoso" description="Creates the Data.Virtuoso NuGet package" depends="build-release-libs">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Data.Virtuoso/lib/net40">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Data.Virtuoso/lib/net40-client">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Data.Virtuoso/lib/net35">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Data.Virtuoso/lib/net35-client">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Data.Virtuoso package -->
    <copy todir="Build/nuget/Data.Virtuoso/lib/net40/">
      <fileset basedir="bin/stable/Libraries/Data/Virtuoso/net40/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Data.Virtuoso/lib/net40-client/">
      <fileset basedir="bin/stable/Libraries/Data/Virtuoso/net40-client/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Data.Virtuoso/lib/net35/">
      <fileset basedir="bin/stable/Libraries/Data/Virtuoso/net35/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Data.Virtuoso/lib/net35-client/">
      <fileset basedir="bin/stable/Libraries/Data/Virtuoso/net35-client/">
        <include name="*" />
      </fileset>
    </copy>
    <!-- Invoke nuget on the package -->
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.Data.Virtuoso.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <target name="dist-nuget-query-fulltext" description="Creates the Query.FullText NuGet package" depends="build-release-libs">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Query.FullText/lib/net40">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Query.FullText/lib/net40-client">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Query.FullText/lib/net35">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Query.FullText/lib/net35-client">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Query.FullText package -->
    <copy todir="Build/nuget/Query.FullText/lib/net40/">
      <fileset basedir="bin/stable/Libraries/Query/FullText/net40/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Query.FullText/lib/net40-client/">
      <fileset basedir="bin/stable/Libraries/Query/FullText/net40-client/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Query.FullText/lib/net35/">
      <fileset basedir="bin/stable/Libraries/Query/FullText/net35/">
        <include name="*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Query.FullText/lib/net35-client/">
      <fileset basedir="bin/stable/Libraries/Query/FullText/net35-client/">
        <include name="*" />
      </fileset>
    </copy>
    <!-- Invoke nuget on the package -->
    <exec workingdir="Build/nuget/Query.FullText/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.Query.FullText.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>
  
  <!-- Upload Targets for Uploading the Builds to a website -->

  <target name="upload" description="Uploads the Distribution ZIP Files to a website" depends="upload-nightly,upload-release">
    
  </target>

  <target name="upload-nightly" description="Uploads the Nightly ZIPs to a website" depends="dist-nightly" if="${string::get-length(dotnetrdf.webserver) > 0 and string::get-length(dotnetrdf.webserver.username) > 0 and string::get-length(dotnetrdf.webserver.password) > 0}">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.nightlyzip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-release" description="Uploads the Release ZIPs to a website" depends="dist-libs">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.libzip}" />
        <include name="/${dotnetrdf.srczip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-toolkit" description="Uploads the Toolkit ZIPs to a website" depends="dist-toolkit">
    <ftp connection="dotNetRDFWebsite" remotedir="/downloads/" connectmode="PASSIVE" createdirs="false" verbose="true">
      <put type="bin" update="false">
        <include name="/${dotnetrdf.toolkitzip}" />
      </put>
    </ftp>
  </target>

  <target name="upload-nuget" description="Uploads the NuGet Packages to the NuGet Gallery" depends="dist-nuget,upload-nuget-core,upload-nuget-data-virtuoso,upload-nuget-query-fulltext">

  </target>

  <target name="upload-nuget-core" description="Uploads the Core Library Package to the NuGet Gallery" depends="dist-nuget-core">
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-data-virtuoso" description="Uploads the Data.Virtuoso Library package to the NuGet Gallery" depends="dist-nuget-data-virtuoso">
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Virtuoso.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-query-fulltext" description="Uploads the Query.FullText Library package to the NuGet Gallery" depends="dist-nuget-query-fulltext">
    <exec workingdir="Build/nuget/Query.FullText/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Query.FullText.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>

  <target name="upload-nuget-overwrite" description="Uploads the NuGet Packages overwriting an existing package with the same version to the NuGet Gallery" depends="dist-nuget">
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF.Data.Sql" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Data.Sql/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Sql.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
    <exec program="nuget.exe">
      <arg value="delete" />
      <arg value="dotNetRDF.Data.Virtuoso" />
      <arg value="${dotnetrdf.nuspecversion}" />
      <arg value="-NoPrompt" />
    </exec>
    <exec workingdir="Build/nuget/Data.Virtuoso/" program="nuget.exe">
      <arg value="push" />
      <arg value="dotNetRDF.Data.Virtuoso.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>
</project>